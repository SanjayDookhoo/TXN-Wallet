{"version":3,"sources":["ducks/constants/actionTypes.js","ducks/reducers/auth.js","ducks/reducers/database_base_models.js","ducks/reducers/database.js","ducks/reducers/index.js","components/Input.js","ducks/api/index.js","pages/Auth/index.js","ducks/actions/auth.js","pages/Dashboard/index.js","ducks/actions/database.js","pages/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["AUTH","SIGN_OUT","GET","POST","PATCH","DELETE","auth","state","user","action","type","actionType","localStorage","setItem","JSON","stringify","payload","clear","base_models","customer","name","address","age","invoice","amount","_foreign_key","table","on_delete","database","console","log","result","res","new_state","Object","entries","forEach","table_name","table_records","fromEntries","map","table_record","id","req_body","record_appended_data","i","inserts","updates","update","_recursiveDelete","ids","filter","direct_children_table_meta","direct_children_table_name","direct_children_table","direct_children_table_ids","values","direct_children_table_record","includes","slice","reducers","combineReducers","Input","handleChange","label","half","autoFocus","handleShowPassword","Grid","item","xs","sm","TextField","onChange","variant","required","fullWidth","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","API","axios","create","baseURL","interceptors","request","use","req","getItem","headers","Authorization","parse","token","signIn","post","signUp","databaseGet","req_params","get","params","databasePost","databasePatch","patch","databaseDelete","delete","data","initialState","email","password","confirm_password","Auth","dispatch","useDispatch","history","useHistory","enqueueSnackbar","useSnackbar","useState","form_data","updateFormData","is_signup","updateIsSignup","show_password","updateShowPassword","e","target","value","className","onSubmit","preventDefault","onSuccess","onFailure","a","api","push","prevIsSignup","Dashboard","useSelector","useEffect","error","signOut","1","NotFound","App","path","exact","component","auth_route_type","CustomRoute","Component","other_params","signed_in","updateSignedIn","loading","updateLoading","decode","exp","Date","getTime","render","props","to","pathname","from","location","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","compose","applyMiddleware","thunk","renderReactDom","ReactDOM","maxSnack","StrictMode","document","getElementById","window","cordova","addEventListener"],"mappings":"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","file":"static/js/main.0d430650.chunk.js","sourcesContent":["// auth.js\nexport const AUTH = 'AUTH';\nexport const SIGN_OUT = 'SIGN_OUT';\n\n// database.js\nexport const GET = 'GET';\nexport const POST = 'POST';\nexport const PATCH = 'PATCH';\nexport const DELETE = 'DELETE';\n","import * as actionType from '../constants/actionTypes';\n\nconst auth = (state = { user: null }, action) => {\n\tswitch (action.type) {\n\t\tcase actionType.AUTH: {\n\t\t\tlocalStorage.setItem(\n\t\t\t\t'profile',\n\t\t\t\tJSON.stringify({ ...action?.payload })\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuser: action.payload,\n\t\t\t};\n\t\t}\n\t\tcase actionType.SIGN_OUT: {\n\t\t\tlocalStorage.clear();\n\n\t\t\treturn { ...state, user: null };\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default auth;\n","export const base_models = {\n\t// Example parent table\n\tcustomer: {\n\t\tname: {\n\t\t\ttype: 'string',\n\t\t},\n\t\taddress: {\n\t\t\ttype: 'string',\n\t\t},\n\t\tage: {\n\t\t\ttype: 'integer',\n\t\t},\n\t},\n\t// Example related table\n\tinvoice: {\n\t\tamount: {\n\t\t\ttype: 'integer',\n\t\t},\n\t\t_foreign_key: {\n\t\t\ttable: 'customer',\n\t\t\ton_delete: 'cascade',\n\t\t},\n\t},\n};\n","import * as actionType from '../constants/actionTypes';\nimport { base_models } from './database_base_models';\n\nconst database = (state = {}, action) => {\n\tconsole.log({ payload: action.payload });\n\n\tswitch (action.type) {\n\t\tcase actionType.GET: {\n\t\t\tconst { result } = action.payload.res;\n\n\t\t\tconst new_state = {\n\t\t\t\t...state,\n\t\t\t};\n\n\t\t\tObject.entries(result).forEach(([table_name, table_records]) => {\n\t\t\t\tnew_state[table_name] = Object.fromEntries(\n\t\t\t\t\ttable_records.map((table_record) => [\n\t\t\t\t\t\ttable_record.id,\n\t\t\t\t\t\ttable_record,\n\t\t\t\t\t])\n\t\t\t\t);\n\t\t\t});\n\n\t\t\treturn new_state;\n\t\t}\n\t\tcase actionType.POST: {\n\t\t\tconst { result } = action.payload.res;\n\t\t\tconst { table_name, req_body } = action.payload;\n\n\t\t\tconst new_state = {\n\t\t\t\t...state,\n\t\t\t};\n\n\t\t\t// should never try to insert into a table that doesnt yet exist, but just incase\n\t\t\t// if (!new_state[table_name]) {\n\t\t\t// \tnew_state[table_name] = {};\n\t\t\t// }\n\n\t\t\tresult.forEach((record_appended_data, i) => {\n\t\t\t\tnew_state[table_name][record_appended_data.id] = {\n\t\t\t\t\t...record_appended_data,\n\t\t\t\t\t...req_body.inserts[i],\n\t\t\t\t};\n\t\t\t});\n\n\t\t\treturn new_state;\n\t\t}\n\t\tcase actionType.PATCH: {\n\t\t\tconst { result } = action.payload.res;\n\t\t\tconst { table_name, req_body } = action.payload;\n\n\t\t\tconst new_state = {\n\t\t\t\t...state,\n\t\t\t};\n\n\t\t\tObject.entries(req_body.updates).forEach(([id, update]) => {\n\t\t\t\tnew_state[table_name][id] = {\n\t\t\t\t\t...new_state[table_name][id],\n\t\t\t\t\t...update,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\treturn new_state;\n\t\t}\n\t\tcase actionType.DELETE: {\n\t\t\tconst { result } = action.payload.res;\n\t\t\tconst { table_name, req_body } = action.payload;\n\n\t\t\tconst new_state = {\n\t\t\t\t...state,\n\t\t\t};\n\n\t\t\t// req_body.ids.forEach((id) => {\n\t\t\t// \tdelete new_state[table_name][id];\n\t\t\t// });\n\n\t\t\t// recursively delete from main table, and ALL related tables\n\t\t\tconst _recursiveDelete = ({ table_name, ids }) => {\n\t\t\t\tids.forEach((id) => {\n\t\t\t\t\tdelete new_state[table_name][id];\n\t\t\t\t});\n\n\t\t\t\t// other tables directly related to this table\n\t\t\t\tconst direct_children_tables = Object.entries(base_models)\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t([\n\t\t\t\t\t\t\tdirect_children_table_name,\n\t\t\t\t\t\t\tdirect_children_table_meta,\n\t\t\t\t\t\t]) =>\n\t\t\t\t\t\t\tdirect_children_table_meta?._foreign_key?.table +\n\t\t\t\t\t\t\t\t's' ===\n\t\t\t\t\t\t\t\ttable_name &&\n\t\t\t\t\t\t\tdirect_children_table_meta?._foreign_key\n\t\t\t\t\t\t\t\t?.on_delete === 'cascade'\n\t\t\t\t\t)\n\t\t\t\t\t.map(\n\t\t\t\t\t\t([\n\t\t\t\t\t\t\tdirect_children_table_name,\n\t\t\t\t\t\t\tdirect_children_table_meta,\n\t\t\t\t\t\t]) => direct_children_table_name + 's'\n\t\t\t\t\t);\n\n\t\t\t\tdirect_children_tables.forEach((direct_children_table) => {\n\t\t\t\t\tconst direct_children_table_ids = Object.values(\n\t\t\t\t\t\tnew_state[direct_children_table]\n\t\t\t\t\t)\n\t\t\t\t\t\t.filter((direct_children_table_record) => {\n\t\t\t\t\t\t\tconsole.log({ direct_children_table_record });\n\t\t\t\t\t\t\treturn ids.includes(\n\t\t\t\t\t\t\t\tdirect_children_table_record[\n\t\t\t\t\t\t\t\t\t`${table_name.slice(0, -1)}_id`\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t(direct_children_table_record) =>\n\t\t\t\t\t\t\t\tdirect_children_table_record.id\n\t\t\t\t\t\t);\n\n\t\t\t\t\t_recursiveDelete({\n\t\t\t\t\t\ttable_name: direct_children_table,\n\t\t\t\t\t\tids: direct_children_table_ids,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t_recursiveDelete({ table_name, ids: req_body.ids });\n\n\t\t\treturn new_state;\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default database;\n","import { combineReducers } from 'redux';\n\nimport auth from './auth';\nimport database from './database';\n\nexport const reducers = combineReducers({ auth, database });\n","import React from 'react';\nimport { TextField, Grid, InputAdornment, IconButton } from '@material-ui/core';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst Input = ({\n\tname,\n\thandleChange,\n\tlabel,\n\thalf,\n\tautoFocus,\n\ttype,\n\thandleShowPassword,\n}) => (\n\t<Grid item xs={12} sm={half ? 6 : 12}>\n\t\t<TextField\n\t\t\tname={name}\n\t\t\tonChange={handleChange}\n\t\t\tvariant=\"outlined\"\n\t\t\trequired\n\t\t\tfullWidth\n\t\t\tlabel={label}\n\t\t\tautoFocus={autoFocus}\n\t\t\ttype={type}\n\t\t\tInputProps={\n\t\t\t\tname === 'password'\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t\t\t\t<IconButton onClick={handleShowPassword}>\n\t\t\t\t\t\t\t\t\t\t{type === 'password' ? (\n\t\t\t\t\t\t\t\t\t\t\t<Visibility />\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<VisibilityOff />\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t),\n\t\t\t\t\t  }\n\t\t\t\t\t: null\n\t\t\t}\n\t\t/>\n\t</Grid>\n);\n\nexport default Input;\n","import axios from 'axios';\n\n// const API = axios.create({ baseURL: 'http://localhost:5000' });\nconst API = axios.create({ baseURL: 'http://192.168.0.10:5000' });\n\nAPI.interceptors.request.use((req) => {\n\tif (localStorage.getItem('profile')) {\n\t\treq.headers.Authorization = `Bearer ${\n\t\t\tJSON.parse(localStorage.getItem('profile')).token\n\t\t}`;\n\t}\n\n\treturn req;\n});\n\nexport const signIn = ({ req_body }) => API.post('/user/signIn', req_body);\nexport const signUp = ({ req_body }) => API.post('/user/signUp', req_body);\n\nexport const databaseGet = ({ table_name, req_params }) =>\n\tAPI.get(`/${table_name}`, { params: req_params });\nexport const databasePost = ({ table_name, req_body }) =>\n\tAPI.post(`/${table_name}`, req_body);\nexport const databasePatch = ({ table_name, req_body }) =>\n\tAPI.patch(`/${table_name}`, req_body);\nexport const databaseDelete = ({ table_name, req_body }) =>\n\tAPI.delete(`/${table_name}`, { data: req_body });\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nimport Input from '../../components/Input';\nimport { signIn, signUp } from '../../ducks/actions/auth';\n\nconst initialState = {\n\temail: '',\n\tpassword: '',\n\tconfirm_password: '',\n};\n\nconst Auth = () => {\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst { enqueueSnackbar } = useSnackbar();\n\n\tconst [form_data, updateFormData] = useState(initialState);\n\tconst [is_signup, updateIsSignup] = useState(false);\n\tconst [show_password, updateShowPassword] = useState(false);\n\tconst handleShowPassword = () => updateShowPassword(!show_password);\n\n\tconst switchMode = () => {\n\t\tupdateFormData(initialState);\n\t\tupdateIsSignup((prevIsSignup) => !prevIsSignup);\n\t\tupdateShowPassword(false);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconsole.log({ is_signup });\n\n\t\tif (is_signup) {\n\t\t\tif (form_data.password === form_data.confirm_password) {\n\t\t\t\tdispatch(\n\t\t\t\t\tsignUp({\n\t\t\t\t\t\treq_body: form_data,\n\t\t\t\t\t\tonSuccess: () => history.push('/'),\n\t\t\t\t\t\tonFailure: () =>\n\t\t\t\t\t\t\tenqueueSnackbar('Email already in use', {\n\t\t\t\t\t\t\t\tvariant: 'error',\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tenqueueSnackbar('Passwords do not match, try again', {\n\t\t\t\t\tvariant: 'error',\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tdispatch(\n\t\t\t\tsignIn({\n\t\t\t\t\treq_body: form_data,\n\t\t\t\t\tonSuccess: () => history.push('/'),\n\t\t\t\t\tonFailure: () =>\n\t\t\t\t\t\tenqueueSnackbar('Incorrect credentials', {\n\t\t\t\t\t\t\tvariant: 'error',\n\t\t\t\t\t\t}),\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t};\n\n\tconst handleChange = (e) =>\n\t\tupdateFormData({ ...form_data, [e.target.name]: e.target.value });\n\n\treturn (\n\t\t<div className=\"w-1/3 mx-auto card flex flex-col justify-center items-center\">\n\t\t\t<div className=\"text-lg\">{is_signup ? 'Sign up' : 'Sign in'}</div>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<div className=\"flex-col justify-center items-center\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\tvalue={form_data.email}\n\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\tvalue={form_data.password}\n\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\ttype={show_password ? 'text' : 'password'}\n\t\t\t\t\t\thandleShowPassword={handleShowPassword}\n\t\t\t\t\t/>\n\t\t\t\t\t{is_signup && (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tname=\"confirm_password\"\n\t\t\t\t\t\t\tlabel=\"Repeat Password\"\n\t\t\t\t\t\t\tvalue={form_data.confirm_password}\n\t\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"clear-both\"></div>\n\t\t\t\t<div className=\"flex flex-col justify-center items-center\">\n\t\t\t\t\t<button type=\"submit\">\n\t\t\t\t\t\t{is_signup ? 'Sign Up' : 'Sign In'}\n\t\t\t\t\t</button>\n\t\t\t\t\t<button onClick={switchMode}>\n\t\t\t\t\t\t{is_signup\n\t\t\t\t\t\t\t? 'Already have an account? Sign in'\n\t\t\t\t\t\t\t: \"Don't have an account? Sign Up\"}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default Auth;\n","import * as actionType from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\nexport const signIn =\n\t({ req_body, onSuccess, onFailure }) =>\n\tasync (dispatch) => {\n\t\ttry {\n\t\t\tconst { data } = await api.signIn({ req_body });\n\n\t\t\tdispatch({ type: actionType.AUTH, payload: data });\n\n\t\t\tif (onSuccess) onSuccess();\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tif (onFailure) onFailure(error);\n\t\t}\n\t};\n\nexport const signUp =\n\t({ req_body, onSuccess, onFailure }) =>\n\tasync (dispatch) => {\n\t\ttry {\n\t\t\tconst { data } = await api.signUp({ req_body });\n\n\t\t\tdispatch({ type: actionType.AUTH, payload: data });\n\n\t\t\tif (onSuccess) onSuccess();\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tif (onFailure) onFailure(error);\n\t\t}\n\t};\n\nexport const signOut =\n\t({ onSuccess, onFailure }) =>\n\tasync (dispatch) => {\n\t\ttry {\n\t\t\tdispatch({ type: actionType.SIGN_OUT });\n\n\t\t\tif (onSuccess) onSuccess();\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tif (onFailure) onFailure(error);\n\t\t}\n\t};\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { signOut } from '../../ducks/actions/auth';\nimport {\n\tdatabaseGet,\n\tdatabasePost,\n\tdatabasePatch,\n\tdatabaseDelete,\n} from '../../ducks/actions/database';\n\nconst Dashboard = () => {\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst database = useSelector((state) => state.database);\n\n\tuseEffect(() => {\n\t\tconsole.log({ database });\n\t}, [database]);\n\n\tconst handleSignOut = () => {\n\t\tdispatch(signOut({ onSuccess: () => history.push('/auth') }));\n\t};\n\n\tconst handleGet = () => {\n\t\tdispatch(\n\t\t\tdatabaseGet({\n\t\t\t\ttable_name: 'customers',\n\t\t\t\treq_params: {\n\t\t\t\t\tname: 'sanjay',\n\t\t\t\t},\n\t\t\t})\n\t\t);\n\t};\n\tconst handlePost = () => {\n\t\tdispatch(\n\t\t\tdatabasePost({\n\t\t\t\ttable_name: 'customers',\n\t\t\t\treq_body: {\n\t\t\t\t\tinserts: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'sanjay',\n\t\t\t\t\t\t\taddress: 'orange',\n\t\t\t\t\t\t\tage: 12,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t})\n\t\t);\n\t};\n\tconst handlePatch = () => {\n\t\tdispatch(\n\t\t\tdatabasePatch({\n\t\t\t\ttable_name: 'customers',\n\t\t\t\treq_body: {\n\t\t\t\t\tupdates: {\n\t\t\t\t\t\t1: {\n\t\t\t\t\t\t\tname: 'bobss',\n\t\t\t\t\t\t\tage: 13,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t})\n\t\t);\n\t};\n\tconst handleDelete = () => {\n\t\tdispatch(\n\t\t\tdatabaseDelete({\n\t\t\t\ttable_name: 'customers',\n\t\t\t\treq_body: {\n\t\t\t\t\tids: [3],\n\t\t\t\t},\n\t\t\t})\n\t\t);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"text-red-500\">Dashboard</div>\n\t\t\t<button onClick={handleSignOut}>sign out button</button> <br />\n\t\t\t<button onClick={handleGet}>get button</button> <br />\n\t\t\t<button onClick={handlePost}>post button</button> <br />\n\t\t\t<button onClick={handlePatch}>patch button</button> <br />\n\t\t\t<button onClick={handleDelete}>delete button</button> <br />\n\t\t</>\n\t);\n};\n\nexport default Dashboard;\n","import * as actionType from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\n// as of right now only the dispatch statement differs for all actions, may need to change later\n\nexport const databaseGet =\n\t({ table_name, req_params, onSuccess, onFailure }) =>\n\tasync (dispatch) => {\n\t\ttry {\n\t\t\tconst { data } = await api.databaseGet({\n\t\t\t\ttable_name,\n\t\t\t\treq_params,\n\t\t\t});\n\n\t\t\tdispatch({\n\t\t\t\ttype: actionType.GET,\n\t\t\t\tpayload: { table_name, req_params, res: data },\n\t\t\t});\n\n\t\t\tif (onSuccess) onSuccess();\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tif (onFailure) onFailure(error);\n\t\t}\n\t};\n\nexport const databasePost =\n\t({ table_name, req_body, onSuccess, onFailure }) =>\n\tasync (dispatch) => {\n\t\ttry {\n\t\t\tconst { data } = await api.databasePost({\n\t\t\t\ttable_name,\n\t\t\t\treq_body,\n\t\t\t});\n\n\t\t\tdispatch({\n\t\t\t\ttype: actionType.POST,\n\t\t\t\tpayload: { table_name, req_body, res: data },\n\t\t\t});\n\n\t\t\tif (onSuccess) onSuccess();\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tif (onFailure) onFailure(error);\n\t\t}\n\t};\n\nexport const databasePatch =\n\t({ table_name, req_body, onSuccess, onFailure }) =>\n\tasync (dispatch) => {\n\t\ttry {\n\t\t\tconst { data } = await api.databasePatch({\n\t\t\t\ttable_name,\n\t\t\t\treq_body,\n\t\t\t});\n\n\t\t\tdispatch({\n\t\t\t\ttype: actionType.PATCH,\n\t\t\t\tpayload: { table_name, req_body, res: data },\n\t\t\t});\n\n\t\t\tif (onSuccess) onSuccess();\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tif (onFailure) onFailure(error);\n\t\t}\n\t};\n\nexport const databaseDelete =\n\t({ table_name, req_body, onSuccess, onFailure }) =>\n\tasync (dispatch) => {\n\t\ttry {\n\t\t\tconst { data } = await api.databaseDelete({\n\t\t\t\ttable_name,\n\t\t\t\treq_body,\n\t\t\t});\n\n\t\t\tdispatch({\n\t\t\t\ttype: actionType.DELETE,\n\t\t\t\tpayload: { table_name, req_body, res: data },\n\t\t\t});\n\n\t\t\tif (onSuccess) onSuccess();\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tif (onFailure) onFailure(error);\n\t\t}\n\t};\n","import React, { useEffect, useState } from 'react';\n\nconst NotFound = () => {\n\treturn <div>Page Not Found - 404</div>;\n};\n\nexport default NotFound;\n","import React, { useState, useEffect } from 'react';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport decode from 'jwt-decode';\n\nimport Auth from '../src/pages/Auth';\nimport Dashboard from '../src/pages/Dashboard';\nimport NotFound from '../src/pages/NotFound';\n\nconst App = () => {\n\treturn (\n\t\t<HashRouter>\n\t\t\t<Switch>\n\t\t\t\t<CustomRoute path=\"/\" exact component={Dashboard} />\n\t\t\t\t<CustomRoute\n\t\t\t\t\tpath=\"/auth\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={Auth}\n\t\t\t\t\tauth_route_type={true}\n\t\t\t\t/>\n\t\t\t\t<Route component={NotFound} />\n\t\t\t</Switch>\n\t\t</HashRouter>\n\t);\n};\n\nexport default App;\n\n// defaults to private route\nconst CustomRoute = ({\n\tpath,\n\tcomponent: Component,\n\tauth_route_type,\n\t...other_params\n}) => {\n\tconst [signed_in, updateSignedIn] = useState(false);\n\tconst [loading, updateLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tconst user = JSON.parse(localStorage.getItem('profile'));\n\t\tconst token = user?.token;\n\n\t\tif (token) {\n\t\t\tconst decoded_token = decode(token);\n\n\t\t\tif (decoded_token.exp * 1000 < new Date().getTime()) {\n\t\t\t\tupdateSignedIn(false);\n\t\t\t} else {\n\t\t\t\tupdateSignedIn(true);\n\t\t\t}\n\t\t} else {\n\t\t\tupdateSignedIn(false);\n\t\t}\n\n\t\tupdateLoading(false);\n\t}, [path]);\n\n\treturn (\n\t\t<>\n\t\t\t{!loading && (\n\t\t\t\t<Route\n\t\t\t\t\t{...other_params}\n\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{auth_route_type && !signed_in && (\n\t\t\t\t\t\t\t\t<Component {...props} />\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{auth_route_type && signed_in && (\n\t\t\t\t\t\t\t\t<Redirect\n\t\t\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\t\t\tpathname: '/',\n\t\t\t\t\t\t\t\t\t\tstate: { from: props.location },\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{!auth_route_type && signed_in && (\n\t\t\t\t\t\t\t\t<Component {...props} />\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{!auth_route_type && !signed_in && (\n\t\t\t\t\t\t\t\t<Redirect\n\t\t\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\t\t\tpathname: '/auth',\n\t\t\t\t\t\t\t\t\t\tstate: { from: props.location },\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t);\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducers } from './ducks/reducers';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { SnackbarProvider } from 'notistack';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nconst renderReactDom = () => {\n\tReactDOM.render(\n\t\t<Provider store={store}>\n\t\t\t<SnackbarProvider maxSnack={3}>\n\t\t\t\t<React.StrictMode>\n\t\t\t\t\t<App />\n\t\t\t\t</React.StrictMode>\n\t\t\t</SnackbarProvider>\n\t\t</Provider>,\n\t\tdocument.getElementById('root')\n\t);\n};\n\nif (window.cordova) {\n\tdocument.addEventListener(\n\t\t'deviceready',\n\t\t() => {\n\t\t\trenderReactDom();\n\t\t},\n\t\tfalse\n\t);\n} else {\n\trenderReactDom();\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}